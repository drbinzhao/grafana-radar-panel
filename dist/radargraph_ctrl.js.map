{"version":3,"sources":["../src/radargraph_ctrl.js"],"names":["MetricsPanelCtrl","moment","_","TimeSeries","panelDefaults","bgColor","radarSettings","fontColor","gridColor","fontSize","legendType","RadarGraphCtrl","$scope","$injector","$rootScope","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","percentPerLight","data","canvasid","Math","random","replace","ctx","radar","currentOptions","updateRadar","series","options","legend","display","position","labels","scale","angleLines","lineWidth","color","gridLines","pointLabels","parseInt","JSON","stringify","document","getElementById","getContext","Chart","type","console","log","destroy","$","remove","append","update","fulldata","datasets","i","rows","length","serie","text","finaldatasets","finallabels","key","push","newdata","key2","label","backgroundColor","addTransparency","colors","borderColor","finaldata","j","curkey","props","datapoints","slice","dataList","newseries","decodeNonHistoricalData","decodeHistoricalData","seriesData","alias","target","addEditorTab","$timeout","cancel","nextTickPromise","col","transp","num","r","g","b","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"radargraph_ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series';\n\nimport './css/radargraph-panel.css!';\nimport './Chart.js'\n\n/*angular.module('grafana.directives').directive('radarElement', function () {\n  return {\n      restrict:\"A\", // E-Element A-Attribute C-Class M-Comments\n      replace: false,\n      link: function($scope, elem, attrs) {\n          $scope[attrs.radarElement] = elem[0];\n      }\n  };\n})*/\n\n/*angular.module('grafana.directives').directive('customLabel', function () {  \n  return {  \n\n      restrict: 'EA',  \n      template: '<div class=\"jumbotron\"><h2>My First Directive</h2><p>This is a simple example.</p></div>'  \n  }  \n})*/\n\nconst panelDefaults = {\n  bgColor: null,\n\n  radarSettings: {\n    fontColor: 'gray',\n    gridColor: 'gray',\n    fontSize: 14,\n    legendType: 'right'\n  }\n};\n\nexport class RadarGraphCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.$rootScope = $rootScope;\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.percentPerLight = 100;\n\n    this.data = []\n    this.canvasid = (\"id\" + (Math.random() * 100000)).replace('.', '')\n\n    this.ctx = null;\n    this.radar=null;\n\n    this.currentOptions=null;\n\n    this.updateRadar();\n\n  }\n\n\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    //console.log(\"On Render\");\n\n\n    this.options = {\n      legend: {\n        display: true,\n        position: this.panel.radarSettings.legendType,\n        labels: {\n          fontColor: this.panel.radarSettings.fontColor\n        }\n      },\n      scale: {\n        angleLines: {\n          lineWidth: 2,\n          color: this.panel.radarSettings.gridColor\n        },\n        gridLines: {\n          lineWidth: 1,\n          color: this.panel.radarSettings.gridColor\n        },\n        pointLabels: {\n          fontSize:parseInt(this.panel.radarSettings.fontSize),\n          fontColor: this.panel.radarSettings.fontColor\n        },\n      }\n    }\n\n    if(this.currentOptions==null)\n      this.currentOptions=JSON.stringify(this.options);\n\n\n    if (this.ctx == null)\n      if(document.getElementById(this.canvasid)!=null)\n        this.ctx = document.getElementById(this.canvasid).getContext('2d');\n\n    if (this.ctx != null) {\n      if(this.radar==null)\n      {\n        this.radar = new Chart(this.ctx, {\n          type: 'radar',\n          data: this.data,\n          options: this.options\n\n        });\n      }\n      else\n      {     \n        if(this.currentOptions!=JSON.stringify(this.options))\n        {\n          console.log(\"Recreate radar graph.\");\n          this.currentOptions=JSON.stringify(this.options);\n          if (this.ctx != null)\n          {\n            if (this.radar!=null)\n            {              \n              this.radar.destroy();\n              $(\"canvas#\"+this.canvasid).remove();              \n              $(\"div#panel\"+this.canvasid).append('<canvas id=\"'+this.canvasid+'\"></canvas>');              \n              this.ctx = document.getElementById(this.canvasid).getContext('2d');\n              \n            }\n            this.radar = new Chart(this.ctx, {\n              type: 'radar',\n              data: this.data,\n              options: this.options\n    \n            });\n          }\n        }\n        \n        this.radar.data=this.data;\n        this.radar.update();\n        \n      }\n    }\n  }\n\n  decodeNonHistoricalData(fulldata)\n  {\n    var labels={}\n    var datasets={}\n  \n    \n    for (var i=0;i<fulldata[0].rows.length;i++)\n    {\n      if(fulldata[0].rows[i].length>2)  // more than 1 aggregation\n      {\n    \n        if(!(fulldata[0].rows[i][0] in labels))\n          labels[fulldata[0].rows[i][0]]=true;\n        if(!(fulldata[0].rows[i][1] in datasets))\n          datasets[fulldata[0].rows[i][1]]={}\n        datasets[fulldata[0].rows[i][1]][fulldata[0].rows[i][0]]=fulldata[0].rows[i][2]\n      }\n      else\n      {\n        if(!(fulldata[0].rows[i][0] in labels))\n          labels[fulldata[0].rows[i][0]]=true;\n        \n        var serie=fulldata[0][\"columns\"][0].text;\n    \n        \n        if(!(serie in datasets))\n          datasets[serie]={}\n        datasets[serie][fulldata[0].rows[i][0]]=fulldata[0].rows[i][1]\n      }\n    }\n  \n    var finaldatasets=[]\n    var finallabels=[]\n    \n    for(var key in labels)\n        finallabels.push(key);\n    \n    var i=0;\n\n    for(var key in datasets)\n    {\n      var newdata=[]\n      for(var key2 in labels)\n        if(key2 in datasets[key])\n          newdata.push(datasets[key][key2]);\n        else\n          newdata.push(0);\n  \n      finaldatasets.push(\n        {\n          label:key\n          ,data:newdata\n          ,backgroundColor: this.addTransparency(this.$rootScope.colors[i],0.2),//'rgba(54, 162, 235, 0.2)',\n          borderColor: this.$rootScope.colors[i]//'rgb(54, 162, 235)'\n        }\n      );\n      i++;\n    }\n  \n    var finaldata={\n        labels:finallabels,\n        datasets:finaldatasets\n      }\n        //alert(JSON.stringify(finaldata))\n    this.data=finaldata;\n  }\n\n  decodeHistoricalData(fulldata)\n  {\n    var labels={}\n    var datasets={}\n    \n  \n    for(var i=0;i<fulldata.length;i++)\n    {\n      var j=0;\n      var curkey='';\n      for (var key in fulldata[i].props)\n      {\n        if(j==0)\n        {\n          labels[fulldata[i].props[key]]=true;\n          curkey=fulldata[i].props[key];\n        }\n        else if(j==1)\n        {\n           if(!(fulldata[i].props[key] in datasets))\n            datasets[fulldata[i].props[key]]={};\n          datasets[fulldata[i].props[key]][curkey]=(fulldata[i].datapoints.slice(-1))[0][0];\n        }\n        j=j+1;\n      }\n    }\n    var finallabels=[]\n    var finaldatasets=[]\n    \n    for(key in labels)\n      finallabels.push(key);\n    \n    var i=0;\n\n    for(key in datasets)\n    {\n      var newdata=[]\n      for(var key2 in labels)\n        if(key2 in datasets[key])\n          newdata.push(datasets[key][key2]);\n        else\n          newdata.push(0);\n    \n      finaldatasets.push(\n      {\n        label:key\n        ,data:newdata\n        ,backgroundColor: this.addTransparency(this.$rootScope.colors[i],0.2),//'rgba(54, 162, 235, 0.2)',\n              borderColor: this.$rootScope.colors[i]//'rgb(54, 162, 235)'\n      }\n      );\n      i++;\n    }\n    \n    var finaldata={\n      labels:finallabels,\n      datasets:finaldatasets\n    }\n\n    \n    this.data=finaldata;\n  }\n\n  onDataReceived(dataList) {\n    var newseries = []\n\n    //console.log(JSON.stringify(dataList))\n\n    this.data = {\n      labels: ['Running', 'Swimming', 'Eating', 'Cycling', 'Sleeping'],\n      datasets: [{\n          data: [Math.random() * 100, 10, 4, 2, 30],\n          label: 'serie 1',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)'\n        },\n        {\n          data: [10, 30, 14, 22, 3],\n          label: 'serie 2',\n          backgroundColor: 'rgba(235, 162, 54, 0.2)',\n          borderColor: 'rgb(235, 162, 54)'\n        }\n      ]\n    }\n\n    var fulldata=dataList;\n\n    if(fulldata.length==1 && (\"columnMap\" in fulldata[0]))\n    {\n      this.decodeNonHistoricalData(fulldata);\n    }\n    else\n    {\n      this.decodeHistoricalData(fulldata);\n    }\n\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n    return series;\n  }\n\n  onInitEditMode() {\n\n    this.addEditorTab('Options', 'public/plugins/grafana-radar-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateRadar() {\n\n    this.nextTickPromise = this.$timeout(this.updateRadar.bind(this), 1000);\n  }\n\n\n  addTransparency(col,transp) {\n      if ( col[0] == \"#\" ) {\n          col = col.slice(1);\n      }\n\n      var num = parseInt(col,16);\n\n      var r = (num >> 16) ;\n      var g = ((num >> 8) & 0x00FF);\n      var b = (num & 0x0000FF);\n\n      return 'rgba('+r+','+g+','+b+','+transp+')';\n  }\n\n\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nRadarGraphCtrl.templateUrl = 'module.html';"]}